#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int N, M = 0;
vector<int>map[1001];
bool visited[1001];

void Dfs(int _start)
{
	visited[_start] = true;

	for (int i = 0; i < map[_start].size(); i++)
	{
		int n = map[_start][i];
		if (!visited[n])
			Dfs(n);
	}
	
}
int main()
{
	cin >> N >> M;
	
	for (int i = 0; i < M; i++)
	{
		int input_1, input_2 = 0;
		cin >> input_1 >> input_2;
		map[input_1].push_back(input_2);
		map[input_2].push_back(input_1);
	}
	int cnt = 0;
	for (int i = 1; i <= N; i++)
	{
		if (!visited[i])
		{
			cnt++;
			Dfs(i);
		}			
	}
	cout << cnt;
	return 0;
}


































































































































































































































































































































































